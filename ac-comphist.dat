((("joinedTransactions" .
   [0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("cityId" .
   [0 0 0 0 1 0])
  ("trans" .
   [4 0 0 0 0])
  ("custId" .
   [5 0 0 0 0 0])
  ("postalCode" .
   [1 0 0 0 1 0 0 0 0 1])
  ("countryId" .
   [1 0 0 0 1 0 0 0 0])
  ("stateId" .
   [0 0 0 0 1 1 0])
  ("CountryIndex" .
   [0 0 0 0 0 0 1 1 0 0 0 0])
  ("StateIndex" .
   [0 0 0 0 0 1 0 0 0 0])
  ("merchantName" .
   [3 0 0 0 0 0 0 0 0 0 0 0])
  ("mccCode" .
   [2 0 0 0 0 0 0])
  ("String" .
   [15 0 0 0 0 0])
  ("transactionDate" .
   [2 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("JoinedTransaction" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0])
  ("saveAsTextFile" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("underSampled" .
   [1 0 0 0 0 0 0 0 0 0 0 0])
  ("brandFreq" .
   [0 0 0 0 0 0 0 1 0])
  ("minSamples" .
   [1 0 0 0 0 0 0 0 0 0])
  ("filter" .
   [1 0 0 0 0 0])
  ("items" .
   [1 0 0 0 0])
  ("300" .
   [1 0 0])
  ("label" .
   [1 0 0 0 0])
  ("Counter" .
   [1 0 0 0 0 0 0])
  ("df" .
   [2 0])
  ("stop" .
   [0 0 1 0])
  ("println" .
   [1 0 0 0 0 0 0])
  ("foreach" .
   [1 0 0 0 0 0 0])
  ("collect" .
   [1 0 0 0 0 0 0])
  ("MccGroupIndex" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("MccCodeIndex" .
   [0 0 0 1 0 0 0 0 0 0 0 0])
  ("NullDelimiter" .
   [0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("line" .
   [2 0 0 0])
  ("transactionsDir" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("Transaction" .
   [1 0 0 0 0 0 0 0 0 0 0])
  ("textFile" .
   [1 0 0 0 0 0 0 0])
  ("sc" .
   [2 0])
  ("accountsTransHotels" .
   [0 0 0 0 0 0 0 0 0 1 1 0 0 0 0 0 0 0 0])
  ("size" .
   [1 0 0 0])
  ("model" .
   [1 0 0 0 0])
  ("termVectorizer" .
   [2 0 0 1 0 1 0 0 0 0 0 0 0 1])
  ("col" .
   [2 0 0])
  ("data" .
   [1 0 0 0])
  ("transformedMccGroup" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("hstack" .
   [0 0 1 0 0 0])
  ("mccGroupFeatures" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0])
  ("transformedMccCode" .
   [0 0 0 0 0 1 1 0 0 0 0 0 0 0 0 0 0 0])
  ("mccCodeFeatures" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("termFeatures" .
   [0 0 0 0 1 0 0 0 0 0 0 0])
  ("fit_transform" .
   [0 0 0 1 1 0 1 0 0 0 0 0 0])
  ("as_matrix" .
   [0 0 1 1 0 0 0 0 0])
  ("a" .
   [3])
  ("apply" .
   [2 0 0 0 0])
  ("att" .
   [7 0 0])
  ("categColumns" .
   [0 0 0 0 2 0 0 0 0 0 0 0])
  ("xrange" .
   [1 0 0 0 0 0])
  ("mccGroupVectorizer" .
   [0 0 0 0 3 1 0 0 0 0 1 0 0 0 0 0 0 2])
  ("mccCodeVectorizer" .
   [0 0 0 1 2 0 0 1 0 0 0 0 0 0 0 0 3])
  ("sparse" .
   [3 0 0 0 0 0])
  ("oneHotEncoding" .
   [1 0 0 0 1 0 1 0 0 0 0 0 0 0])
  ("w" .
   [7])
  ("wordVectorizer" .
   [3 0 0 0 0 1 1 0 0 1 0 0 0 0])
  ("b" .
   [3])
  ("transformedNames" .
   [0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0])
  ("columns" .
   [4 0 0 0 0 0 0])
  ("e" .
   [2])
  ("preprocessData" .
   [0 0 0 0 0 1 0 0 0 0 0 1 0 0])
  ("from_csv" .
   [0 0 0 0 1 0 0 0])
  ("else" .
   [3 0 0 0])
  ("testing" .
   [2 0 0 0 0 0 0])
  ("not" .
   [2 0 0])
  ("wordFeatures" .
   [0 0 0 0 0 0 0 1 0 0 0 0])
  ("bagOfWords" .
   [0 0 0 1 0 1 0 0 0 0])
  ("tolist" .
   [5 0 0 2 1 0])
  ("DictVectorizer" .
   [0 0 1 3 0 0 0 0 0 0 0 0 0 0])
  ("token" .
   [2 0 0 0 0])
  ("tokenizedName" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0])
  ("convertUnicode" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0])
  ("n" .
   [1])
  ("name" .
   [3 0 0 0])
  ("unicodedata" .
   [0 0 0 0 0 1 0 0 0 0 0])
  ("False" .
   [4 0 1 0 0])
  ("merchant_name" .
   [3 0 0 0 0 0 0 0 1 0 0 0 0])
  ("transformMerchantName" .
   [0 0 0 0 0 0 1 0 0 1 1 0 0 0 0 0 0 0 0 0 0])
  ("rawData" .
   [9 0 0 1 0 1 0])
  ("fileName" .
   [0 0 0 0 1 0 0 0])
  ("m" .
   [5])
  ("main" .
   [2 0 0 0])
  ("__main__" .
   [0 0 0 0 1 0 0 0])
  ("__name__" .
   [0 0 0 0 1 0 0 0])
  ("if" .
   [4 0])
  ("i" .
   [3])
  ("dict" .
   [2 0 0 0])
  ("in" .
   [7 0])
  ("word" .
   [4 0 0 0])
  ("lambda" .
   [4 0 0 0 0 0])
  ("d" .
   [4])
  ("t" .
   [8])
  ("string" .
   [1 0 0 0 0 0])
  ("dataset" .
   [10 0 0 0 0 0 0])
  ("pass" .
   [5 0 0 0])
  ("__init__" .
   [0 0 0 0 0 0 1 0])
  ("class" .
   [4 0 0 0 0])
  ("sklearn" .
   [2 0 0 0 0 0 0])
  ("pd" .
   [3 0])
  ("pandas" .
   [1 0 0 0 0 0])
  ("as" .
   [3 0])
  ("np" .
   [4 0])
  ("numpy" .
   [3 0 0 0 1])
  ("argv" .
   [2 0 0 0])
  ("open" .
   [1 0 0 0])
  ("json" .
   [1 0 0 0])
  ("return" .
   [6 0 0 0 0 0])
  ("amount" .
   [1 0 0 0 0 0])
  ("file_output" .
   [0 0 0 0 0 0 0 1 0 0 0])
  ("primary_brand_name" .
   [1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("code" .
   [3 0 0 0])
  ("primary_brand" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("brands_code_mapping" .
   [0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0])
  ("brand_name" .
   [5 0 0 0 0 1 0 0 0 0])
  ("get_brand_total_spend" .
   [0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("for" .
   [8 0 0])
  ("brand" .
   [1 0 0 0 1])
  ("sys" .
   [4 0 0])
  ("merchant" .
   [3 0 0 0 0 0 0 1])
  ("brand_code_mapping" .
   [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0])
  ("brand_code" .
   [3 0 0 0 0 0 0 0 0 0])
  ("row" .
   [1 0 0])
  ("values" .
   [2 0 0 0 0 0])
  ("brands" .
   [4 0 0 0 0 0])
  ("brand_filter" .
   [2 0 0 0 0 0 0 0 0 0 0 0])
  ("def" .
   [12 0 0])
  ("num_brands" .
   [2 0 0 3 0 0 0 0 0 0])
  ("metadata_excel" .
   [0 0 0 0 0 0 1 1 0 0 0 0 0 0])
  ("brand_lists" .
   [0 0 0 0 0 0 0 0 0 0 1])
  ("entity_def" .
   [1 0 0 1 0 2 1 0 0 1])
  ("brand_of_interest" .
   [3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0])
  ("self" .
   [31 0 0 0])
  ("from" .
   [6 0 0 0])
  ("export" .
   [2 0 0 0 1 0])
  ("PATH" .
   [3 0 0 2])
  ("import" .
   [29 0 0 0 0 0])
  ("require" .
   [1 0 0 0 0 0 0])
  ("java" .
   [1 0 0 0])
  ("io" .
   [2 0])
  ("File" .
   [1 0 0 0])
  ("scala" .
   [1 0 0 0 0])
  ("Source" .
   [1 0 0 0 0 0])
  ("org" .
   [6 0 0])
  ("apache" .
   [4 0 0 1 1 0])
  ("spark" .
   [6 0 0 0 0])
  ("SparkConf" .
   [2 0 1 0 0 0 0 0 0])
  ("SparkContext" .
   [0 0 0 1 0 1 0 0 0 0 0 1])
  ("rdd" .
   [1 0 0])
  ("object" .
   [1 0 0 0 0 0])
  ("val" .
   [5 0 0])
  ("SimpleDateFormat" .
   [0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0])
  ("aggSameDayTrans" .
   [0 0 0 0 1 0 0 0 0 0 0 0 0 0 1])
  ("map" .
   [4 0 0])
  ("case" .
   [8 0 0 0])
  ("fields" .
   [10 0 0 0 0 0])
  ("split" .
   [5 0 0 0 0])
  ("groupByKey" .
   [0 0 0 0 0 1 0 0 0 0])
  ("mapValues" .
   [3 0 0 0 0 0 0 0 0])
  ("dateFormatter" .
   [0 0 0 0 0 0 0 1 0 0 0 0 0])
  ("toList" .
   [1 0 0 0 0 0])
  ("aggConsecDayTrans" .
   [0 0 0 2 1 0 0 0 0 0 0 0 0 0 0 0 0])
  ("reduceByKey" .
   [0 0 0 0 0 0 2 0 0 0 0])
  ("csvfile" .
   [0 0 0 1 0 0 0])
  ("python-mode" .
   [0 0 0 0 0 0 0 1 0 0 0])))
